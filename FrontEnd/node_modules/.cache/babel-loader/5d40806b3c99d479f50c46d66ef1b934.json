{"ast":null,"code":"import Products from \"../components/ProductWape.vue\";\nimport { useProductData } from \"@/stores/Products\";\nimport ContactService from \"@/services/contact.service\";\nexport default {\n  components: {\n    Products\n  },\n\n  data() {\n    return {\n      products: [],\n      activeIndex: -1,\n      searchTexts: useProductData()\n    };\n  },\n\n  watch: {// SearchText() {\n    //   this.activeIndex = -1;\n    // },\n  },\n  computed: {\n    productStrings() {\n      return this.products.map(product => {\n        const {\n          type,\n          name\n        } = product;\n        return [type, name].join(\"\").toLowerCase();\n      });\n    },\n\n    // Trả về các contact có chứa thông tin cần tìm kiếm.\n    filteredProducts() {\n      // if (!this.searchText) return this.products;\n      return this.products.filter((contact, index) => this.productStrings[index].includes(this.searchTexts.searchText));\n    },\n\n    activeContact() {\n      if (this.activeIndex < 0) return null;\n      return this.products[this.activeIndex];\n    },\n\n    filteredProductsCount() {\n      return this.filteredProducts.length;\n    }\n\n  },\n  methods: {\n    test() {\n      console.log(this.filteredProductsCount());\n      console.log(this.searchText);\n    },\n\n    async retrieveContacts() {\n      try {\n        this.products = await ContactService.getAll();\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\n    refreshList() {\n      this.retrieveContacts();\n      this.activeIndex = -1;\n    }\n\n  },\n\n  mounted() {\n    this.refreshList();\n  }\n\n};","map":{"version":3,"mappings":"AASA,OAAOA,QAAP,MAAqB,+BAArB;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AAEA,eAAe;EACbC,UAAU,EAAE;IACVH;EADU,CADC;;EAIbI,IAAI,GAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EADL;MAELC,WAAW,EAAE,CAAC,CAFT;MAGLC,WAAW,EAAEN,cAAc;IAHtB,CAAP;EAKD,CAVY;;EAWbO,KAAK,EAAE,CACL;IACA;IACA;EAHK,CAXM;EAgBbC,QAAQ,EAAE;IACRC,cAAc,GAAG;MACf,OAAO,KAAKL,QAAL,CAAcM,GAAd,CAAmBC,OAAD,IAAa;QACpC,MAAM;UAAEC,IAAF;UAAQC;QAAR,IAAiBF,OAAvB;QACA,OAAO,CAACC,IAAD,EAAOC,IAAP,EAAaC,IAAb,CAAkB,EAAlB,EAAsBC,WAAtB,EAAP;MACD,CAHM,CAAP;IAID,CANO;;IAOR;IACAC,gBAAgB,GAAG;MACjB;MACA,OAAO,KAAKZ,QAAL,CAAca,MAAd,CAAqB,CAACC,OAAD,EAAUC,KAAV,KAC1B,KAAKV,cAAL,CAAoBU,KAApB,EAA2BC,QAA3B,CAAoC,KAAKd,WAAL,CAAiBe,UAArD,CADK,CAAP;IAGD,CAbO;;IAcRC,aAAa,GAAG;MACd,IAAI,KAAKjB,WAAL,GAAmB,CAAvB,EAA0B,OAAO,IAAP;MAC1B,OAAO,KAAKD,QAAL,CAAc,KAAKC,WAAnB,CAAP;IACD,CAjBO;;IAkBRkB,qBAAqB,GAAG;MACtB,OAAO,KAAKP,gBAAL,CAAsBQ,MAA7B;IACD;;EApBO,CAhBG;EAsCbC,OAAO,EAAE;IACPC,IAAI,GAAG;MACLC,OAAO,CAACC,GAAR,CAAY,KAAKL,qBAAL,EAAZ;MACAI,OAAO,CAACC,GAAR,CAAY,KAAKP,UAAjB;IACD,CAJM;;IAKP,MAAMQ,gBAAN,GAAyB;MACvB,IAAI;QACF,KAAKzB,QAAL,GAAgB,MAAMH,cAAc,CAAC6B,MAAf,EAAtB;MACF,CAFA,CAEE,OAAOC,KAAP,EAAc;QACdJ,OAAO,CAACC,GAAR,CAAYG,KAAZ;MACF;IACD,CAXM;;IAYPC,WAAW,GAAG;MACZ,KAAKH,gBAAL;MACA,KAAKxB,WAAL,GAAmB,CAAC,CAApB;IACD;;EAfM,CAtCI;;EAuDb4B,OAAO,GAAG;IACR,KAAKD,WAAL;EACD;;AAzDY,CAAf","names":["Products","useProductData","ContactService","components","data","products","activeIndex","searchTexts","watch","computed","productStrings","map","product","type","name","join","toLowerCase","filteredProducts","filter","contact","index","includes","searchText","activeContact","filteredProductsCount","length","methods","test","console","log","retrieveContacts","getAll","error","refreshList","mounted"],"sourceRoot":"","sources":["D:\\CT449\\shoponline\\src\\views\\SearchView.vue"],"sourcesContent":["<!-- eslint-disable vue/no-dupe-keys -->\n<template>\n  <div>\n    <products v-if=\"filteredProductsCount > 0\" :mountproduct=\"filteredProducts\">\n    </products>\n  </div>\n</template>\n\n<script>\nimport Products from \"../components/ProductWape.vue\";\nimport { useProductData } from \"@/stores/Products\";\nimport ContactService from \"@/services/contact.service\";\n\nexport default {\n  components: {\n    Products,\n  },\n  data() {\n    return {\n      products: [],\n      activeIndex: -1,\n      searchTexts: useProductData(),\n    };\n  },\n  watch: {\n    // SearchText() {\n    //   this.activeIndex = -1;\n    // },\n  },\n  computed: {\n    productStrings() {\n      return this.products.map((product) => {\n        const { type, name } = product;\n        return [type, name].join(\"\").toLowerCase();\n      });\n    },\n    // Trả về các contact có chứa thông tin cần tìm kiếm.\n    filteredProducts() {\n      // if (!this.searchText) return this.products;\n      return this.products.filter((contact, index) =>\n        this.productStrings[index].includes(this.searchTexts.searchText)\n      );\n    },\n    activeContact() {\n      if (this.activeIndex < 0) return null;\n      return this.products[this.activeIndex];\n    },\n    filteredProductsCount() {\n      return this.filteredProducts.length;\n    },\n  },\n  methods: {\n    test() {\n      console.log(this.filteredProductsCount());\n      console.log(this.searchText);\n    },\n    async retrieveContacts() {\n      try {\n        this.products = await ContactService.getAll();\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    refreshList() {\n      this.retrieveContacts();\n      this.activeIndex = -1;\n    },\n  },\n  mounted() {\n    this.refreshList();\n  },\n};\n</script>\n\n<style></style>\n"]},"metadata":{},"sourceType":"module"}