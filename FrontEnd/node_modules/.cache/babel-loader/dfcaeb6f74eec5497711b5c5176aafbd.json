{"ast":null,"code":"import Products from \"../components/ProductWape.vue\";\nimport ContactService from \"@/services/contact.service\";\nexport default {\n  components: {\n    Products\n  },\n\n  data() {\n    return {\n      products: [],\n      checked: false,\n      courseItemCheckbox: []\n    };\n  },\n\n  computed: {\n    filteredProducts() {\n      return this.products;\n    },\n\n    filteredProductsCount() {\n      return this.filteredProducts.length;\n    }\n\n  },\n  methods: {\n    t() {\n      console.log(this.mountproduct);\n    },\n\n    formatter(data) {\n      const fm = new Intl.NumberFormat(\"vi-VN\", {\n        style: \"currency\",\n        currency: \"VND\",\n        minimumFractionDigits: 0\n      });\n      data = fm.format(data);\n      return data;\n    },\n\n    async deleteProduct(data) {\n      try {\n        await ContactService.forceDelete(data);\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\n    async retrieveProducts() {\n      try {\n        this.products = await ContactService.getAll();\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\n    renderCheckAllSubmitBtn() {\n      console.log(this.courseItemCheckbox); // checkedCount > 0\n      //   ? this.$refs.checkAllSubmitBnt.classList.remove(\"disabled\")\n      //   : this.$refs.checkAllSubmitBnt.classList.add(\"disabled\");\n    } // changeCheckbox() {\n    //   let isCheckedAll = this.checked;\n    //   this.courseItemCheckbox.forEach((Item) => {\n    //     Item.checked = isCheckedAll;\n    //   });\n    //   // renderCheckAllSubmitBtn();\n    // },\n\n\n  },\n\n  mounted() {\n    this.retrieveProducts();\n  }\n\n};","map":{"version":3,"mappings":"AAiBA,OAAOA,QAAP,MAAqB,+BAArB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AAEA,eAAe;EACbC,UAAU,EAAE;IACVF;EADU,CADC;;EAIbG,IAAI,GAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EADL;MAELC,OAAO,EAAE,KAFJ;MAGLC,kBAAkB,EAAE;IAHf,CAAP;EAKD,CAVY;;EAWbC,QAAQ,EAAE;IACRC,gBAAgB,GAAG;MACjB,OAAO,KAAKJ,QAAZ;IACD,CAHO;;IAIRK,qBAAqB,GAAG;MACtB,OAAO,KAAKD,gBAAL,CAAsBE,MAA7B;IACD;;EANO,CAXG;EAmBbC,OAAO,EAAE;IACPC,CAAC,GAAG;MACFC,OAAO,CAACC,GAAR,CAAY,KAAKC,YAAjB;IACD,CAHM;;IAIPC,SAAS,CAACb,IAAD,EAAO;MACd,MAAMc,EAAC,GAAI,IAAIC,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;QACxCC,KAAK,EAAE,UADiC;QAExCC,QAAQ,EAAE,KAF8B;QAGxCC,qBAAqB,EAAE;MAHiB,CAA/B,CAAX;MAKAnB,IAAG,GAAIc,EAAE,CAACM,MAAH,CAAUpB,IAAV,CAAP;MACA,OAAOA,IAAP;IACD,CAZM;;IAaP,MAAMqB,aAAN,CAAoBrB,IAApB,EAA0B;MACxB,IAAI;QACF,MAAMF,cAAc,CAACwB,WAAf,CAA2BtB,IAA3B,CAAN;MACF,CAFA,CAEE,OAAOuB,KAAP,EAAc;QACdb,OAAO,CAACC,GAAR,CAAYY,KAAZ;MACF;IACD,CAnBM;;IAoBP,MAAMC,gBAAN,GAAyB;MACvB,IAAI;QACF,KAAKvB,QAAL,GAAgB,MAAMH,cAAc,CAAC2B,MAAf,EAAtB;MACF,CAFA,CAEE,OAAOF,KAAP,EAAc;QACdb,OAAO,CAACC,GAAR,CAAYY,KAAZ;MACF;IACD,CA1BM;;IA2BPG,uBAAuB,GAAG;MACxBhB,OAAO,CAACC,GAAR,CAAY,KAAKR,kBAAjB,EADwB,CAExB;MACA;MACA;IACD,CAhCM,CAiCP;IACA;IAEA;IACA;IACA;IACA;IACA;;;EAxCO,CAnBI;;EA6DbwB,OAAO,GAAG;IACR,KAAKH,gBAAL;EACD;;AA/DY,CAAf","names":["Products","ContactService","components","data","products","checked","courseItemCheckbox","computed","filteredProducts","filteredProductsCount","length","methods","t","console","log","mountproduct","formatter","fm","Intl","NumberFormat","style","currency","minimumFractionDigits","format","deleteProduct","forceDelete","error","retrieveProducts","getAll","renderCheckAllSubmitBtn","mounted"],"sourceRoot":"","sources":["D:\\CT449\\shoponline\\src\\views\\ProductView.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"header_product\">\n      <h2 @click=\"test\">Tất cả sản phẩm</h2>\n      <!-- <div class=\"sort\">{{ filteredProductsCount }}</div> -->\n    </div>\n    <div class=\"tab-result\">\n      <products\n        v-if=\"filteredProductsCount > 0\"\n        :mountproduct=\"filteredProducts\"\n      >\n      </products>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Products from \"../components/ProductWape.vue\";\nimport ContactService from \"@/services/contact.service\";\n\nexport default {\n  components: {\n    Products,\n  },\n  data() {\n    return {\n      products: [],\n      checked: false,\n      courseItemCheckbox: [],\n    };\n  },\n  computed: {\n    filteredProducts() {\n      return this.products;\n    },\n    filteredProductsCount() {\n      return this.filteredProducts.length;\n    },\n  },\n  methods: {\n    t() {\n      console.log(this.mountproduct);\n    },\n    formatter(data) {\n      const fm = new Intl.NumberFormat(\"vi-VN\", {\n        style: \"currency\",\n        currency: \"VND\",\n        minimumFractionDigits: 0,\n      });\n      data = fm.format(data);\n      return data;\n    },\n    async deleteProduct(data) {\n      try {\n        await ContactService.forceDelete(data);\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async retrieveProducts() {\n      try {\n        this.products = await ContactService.getAll();\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    renderCheckAllSubmitBtn() {\n      console.log(this.courseItemCheckbox);\n      // checkedCount > 0\n      //   ? this.$refs.checkAllSubmitBnt.classList.remove(\"disabled\")\n      //   : this.$refs.checkAllSubmitBnt.classList.add(\"disabled\");\n    },\n    // changeCheckbox() {\n    //   let isCheckedAll = this.checked;\n\n    //   this.courseItemCheckbox.forEach((Item) => {\n    //     Item.checked = isCheckedAll;\n    //   });\n    //   // renderCheckAllSubmitBtn();\n    // },\n  },\n  mounted() {\n    this.retrieveProducts();\n  },\n};\n</script>\n\n<style cope>\n.tab-result {\n  margin-top: 28px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}