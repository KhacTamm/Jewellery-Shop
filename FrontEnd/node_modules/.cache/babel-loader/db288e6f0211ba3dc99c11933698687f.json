{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// // import axios from \"axios\";\n// // const commonConfig = {\n// //   headers: {\n// //     \"Content-Type\": \"application/json\",\n// //     Accept: \"application/json\",\n// //   },\n// // };\n// // export default (baseURL) => {\n// //   return axios.create({\n// //     baseURL,\n// //     ...commonConfig,\n// //   });\n// // };\n// import axios from \"axios\";\n// export default axios.create({\n//   baseURL: \"http://localhost:3000/\",\n//   headers: {\n//     \"Content-Type\": \"application/json\",\n//     Accept: \"application/json\",\n//   },\n// });\nimport axios from \"axios\";\nimport { useAuthStore } from \"@/stores/auth.store\";\nimport vm from \"@/main\";\nconst commonConfig = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\"\n  }\n};\nexport default axios.create({\n  baseURL: \"http://localhost:3000/\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\"\n  }\n});\nexport const createApiClient = (baseURL, withAuthToken = false) => {\n  const api = axios.create({\n    baseURL,\n    ...commonConfig\n  });\n\n  if (withAuthToken) {\n    api.interceptors.request.use(config => {\n      const auth = useAuthStore();\n      const user = auth.user;\n\n      if (user && user.accessToken) {\n        config.headers.authorization = `Bearer ${user.accessToken}`;\n      }\n\n      return config;\n    });\n    api.interceptors.response.use(response => {\n      return response;\n    }, error => {\n      if (error.response.status == 401) {\n        // Maybe token expired, so logout\n        useAuthStore().logout();\n        vm.$router.push({\n          name: \"login\"\n        });\n      }\n\n      return Promise.reject(error);\n    });\n  }\n\n  return api;\n};","map":{"version":3,"names":["axios","useAuthStore","vm","commonConfig","headers","Accept","create","baseURL","createApiClient","withAuthToken","api","interceptors","request","use","config","auth","user","accessToken","authorization","response","error","status","logout","$router","push","name","Promise","reject"],"sources":["D:/CT449/shoponline/src/services/api.service.js"],"sourcesContent":["// // import axios from \"axios\";\n// // const commonConfig = {\n// //   headers: {\n// //     \"Content-Type\": \"application/json\",\n// //     Accept: \"application/json\",\n// //   },\n// // };\n// // export default (baseURL) => {\n// //   return axios.create({\n// //     baseURL,\n// //     ...commonConfig,\n// //   });\n// // };\n\n// import axios from \"axios\";\n// export default axios.create({\n//   baseURL: \"http://localhost:3000/\",\n//   headers: {\n//     \"Content-Type\": \"application/json\",\n//     Accept: \"application/json\",\n//   },\n// });\n\nimport axios from \"axios\";\nimport { useAuthStore } from \"@/stores/auth.store\";\nimport vm from \"@/main\";\n\nconst commonConfig = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\",\n  },\n};\n\nexport default axios.create({\n  baseURL: \"http://localhost:3000/\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\",\n  },\n});\n\nexport const createApiClient = (baseURL, withAuthToken = false) => {\n  const api = axios.create({\n    baseURL,\n    ...commonConfig,\n  });\n\n  if (withAuthToken) {\n    api.interceptors.request.use((config) => {\n      const auth = useAuthStore();\n\n      const user = auth.user;\n      if (user && user.accessToken) {\n        config.headers.authorization = `Bearer ${user.accessToken}`;\n      }\n      return config;\n    });\n\n    api.interceptors.response.use(\n      (response) => {\n        return response;\n      },\n      (error) => {\n        if (error.response.status == 401) {\n          // Maybe token expired, so logout\n          useAuthStore().logout();\n          vm.$router.push({ name: \"login\" });\n        }\n        return Promise.reject(error);\n      }\n    );\n  }\n\n  return api;\n};\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,OAAOC,EAAP,MAAe,QAAf;AAEA,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE;IACP,gBAAgB,kBADT;IAEPC,MAAM,EAAE;EAFD;AADU,CAArB;AAOA,eAAeL,KAAK,CAACM,MAAN,CAAa;EAC1BC,OAAO,EAAE,wBADiB;EAE1BH,OAAO,EAAE;IACP,gBAAgB,kBADT;IAEPC,MAAM,EAAE;EAFD;AAFiB,CAAb,CAAf;AAQA,OAAO,MAAMG,eAAe,GAAG,CAACD,OAAD,EAAUE,aAAa,GAAG,KAA1B,KAAoC;EACjE,MAAMC,GAAG,GAAGV,KAAK,CAACM,MAAN,CAAa;IACvBC,OADuB;IAEvB,GAAGJ;EAFoB,CAAb,CAAZ;;EAKA,IAAIM,aAAJ,EAAmB;IACjBC,GAAG,CAACC,YAAJ,CAAiBC,OAAjB,CAAyBC,GAAzB,CAA8BC,MAAD,IAAY;MACvC,MAAMC,IAAI,GAAGd,YAAY,EAAzB;MAEA,MAAMe,IAAI,GAAGD,IAAI,CAACC,IAAlB;;MACA,IAAIA,IAAI,IAAIA,IAAI,CAACC,WAAjB,EAA8B;QAC5BH,MAAM,CAACV,OAAP,CAAec,aAAf,GAAgC,UAASF,IAAI,CAACC,WAAY,EAA1D;MACD;;MACD,OAAOH,MAAP;IACD,CARD;IAUAJ,GAAG,CAACC,YAAJ,CAAiBQ,QAAjB,CAA0BN,GAA1B,CACGM,QAAD,IAAc;MACZ,OAAOA,QAAP;IACD,CAHH,EAIGC,KAAD,IAAW;MACT,IAAIA,KAAK,CAACD,QAAN,CAAeE,MAAf,IAAyB,GAA7B,EAAkC;QAChC;QACApB,YAAY,GAAGqB,MAAf;QACApB,EAAE,CAACqB,OAAH,CAAWC,IAAX,CAAgB;UAAEC,IAAI,EAAE;QAAR,CAAhB;MACD;;MACD,OAAOC,OAAO,CAACC,MAAR,CAAeP,KAAf,CAAP;IACD,CAXH;EAaD;;EAED,OAAOV,GAAP;AACD,CAjCM"},"metadata":{},"sourceType":"module"}