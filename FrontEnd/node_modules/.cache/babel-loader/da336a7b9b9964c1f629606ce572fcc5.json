{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"sp\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_products = _resolveComponent(\"products\");\n\n  const _component_not_found_search = _resolveComponent(\"not-found-search\");\n\n  return $options.filteredProductsCount > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_products, {\n    mountproduct: $options.filteredProducts\n  }, null, 8\n  /* PROPS */\n  , [\"mountproduct\"])])) : (_openBlock(), _createBlock(_component_not_found_search, {\n    key: 1\n  }));\n}","map":{"version":3,"mappings":";;;EACOA,KAAK,EAAC;;;;;;;SAAWC,iCAAqB,mBAA3CC,oBAEM,KAFN,cAEM,CADJC,aAAuDC,mBAAvD,EAAuD;IAA5CC,YAAY,EAAEJ;EAA8B,CAAvD,EAAyC,IAAzC,EAAyC;EAAA;EAAzC,EAAyC,gBAAzC,CACI,CAFN,oBAGAK,aAA6CC,2BAA7C,EAA6C;IAAAC;EAAA,CAA7C","names":["class","$options","_createElementBlock","_createVNode","_component_products","mountproduct","_createBlock","_component_not_found_search","key"],"sourceRoot":"","sources":["D:\\CT449\\BaiTapLon_BanChinhThuc1\\FrontEnd\\src\\views\\SearchView.vue"],"sourcesContent":["<template>\n  <div class=\"sp\" v-if=\"filteredProductsCount > 0\">\n    <products :mountproduct=\"filteredProducts\"> </products>\n  </div>\n  <not-found-search v-else> </not-found-search>\n</template>\n\n<script>\nimport { useAppStore } from \"@/stores/app.store\";\nimport Products from \"../components/ProductWape.vue\";\nimport NotFoundSearch from \"@/components/NotFoundSearch.vue\";\nimport ProductService from \"@/services/product.service\";\n\nexport default {\n  components: {\n    Products,\n    NotFoundSearch,\n  },\n  data() {\n    return {\n      products: [],\n      activeIndex: -1,\n      searchText: useAppStore(),\n    };\n  },\n  computed: {\n    productStrings() {\n      return this.products.map((product) => {\n        const { type, name } = product;\n        return [type, name].join(\"\").trim().toLowerCase();\n      });\n    },\n    // Trả về các contact có chứa thông tin cần tìm kiếm.\n    filteredProducts() {\n      return this.products.filter((contact, index) =>\n        this.productStrings[index].includes(this.searchText.SearchText)\n      );\n    },\n    activeContact() {\n      if (this.activeIndex < 0) return null;\n      return this.products[this.activeIndex];\n    },\n    filteredProductsCount() {\n      return this.filteredProducts.length;\n    },\n  },\n  methods: {\n    async retrieveContacts() {\n      try {\n        this.products = await ProductService.getAll();\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    refreshList() {\n      this.retrieveContacts();\n      this.activeIndex = -1;\n    },\n  },\n  mounted() {\n    this.refreshList();\n  },\n};\n</script>\n\n<style>\n.SearchEmpty {\n  display: flex;\n  justify-content: center;\n  margin-bottom: 100px;\n}\n\n.textSearchEmpty {\n  text-align: center;\n}\n\n.sp {\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr;\n  grid-gap: 25px;\n  justify-content: space-evenly;\n  padding-left: 35px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}