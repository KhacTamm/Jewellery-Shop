{"ast":null,"code":"// import { useProductStore } from \"@/stores/products.store\";\nimport { useAppStore } from \"@/stores/app.store\";\nimport Products from \"../components/ProductWape.vue\";\nimport NotFoundSearch from \"@/components/NotFoundSearch.vue\";\nimport ProductService from \"@/services/product.service\";\nexport default {\n  components: {\n    Products,\n    NotFoundSearch\n  },\n\n  data() {\n    return {\n      products: [],\n      activeIndex: -1,\n      searchText: useAppStore()\n    };\n  },\n\n  computed: {\n    productStrings() {\n      return this.products.map(product => {\n        const {\n          type,\n          name\n        } = product;\n        return [type, name].join(\"\").toLowerCase().trim();\n      });\n    },\n\n    // Trả về các contact có chứa thông tin cần tìm kiếm.\n    filteredProducts() {\n      return this.products.filter((contact, index) => this.productStrings[index].includes(this.searchText.SearchText));\n    },\n\n    activeContact() {\n      if (this.activeIndex < 0) return null;\n      return this.products[this.activeIndex];\n    },\n\n    filteredProductsCount() {\n      return this.filteredProducts.length;\n    }\n\n  },\n  methods: {\n    async retrieveContacts() {\n      try {\n        this.products = await ProductService.getAll();\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\n    refreshList() {\n      this.retrieveContacts();\n      this.activeIndex = -1;\n    }\n\n  },\n\n  mounted() {\n    this.refreshList();\n  }\n\n};","map":{"version":3,"mappings":"AAOA;AACA,SAASA,WAAT,QAA4B,oBAA5B;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AAEA,eAAe;EACbC,UAAU,EAAE;IACVH,QADU;IAEVC;EAFU,CADC;;EAKbG,IAAI,GAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EADL;MAELC,WAAW,EAAE,CAAC,CAFT;MAGLC,UAAU,EAAER,WAAW;IAHlB,CAAP;EAKD,CAXY;;EAYbS,QAAQ,EAAE;IACRC,cAAc,GAAG;MACf,OAAO,KAAKJ,QAAL,CAAcK,GAAd,CAAmBC,OAAD,IAAa;QACpC,MAAM;UAAEC,IAAF;UAAQC;QAAR,IAAiBF,OAAvB;QACA,OAAO,CAACC,IAAD,EAAOC,IAAP,EAAaC,IAAb,CAAkB,EAAlB,EAAsBC,WAAtB,GAAoCC,IAApC,EAAP;MACD,CAHM,CAAP;IAID,CANO;;IAOR;IACAC,gBAAgB,GAAG;MACjB,OAAO,KAAKZ,QAAL,CAAca,MAAd,CAAqB,CAACC,OAAD,EAAUC,KAAV,KAC1B,KAAKX,cAAL,CAAoBW,KAApB,EAA2BC,QAA3B,CAAoC,KAAKd,UAAL,CAAgBe,UAApD,CADK,CAAP;IAGD,CAZO;;IAaRC,aAAa,GAAG;MACd,IAAI,KAAKjB,WAAL,GAAmB,CAAvB,EAA0B,OAAO,IAAP;MAC1B,OAAO,KAAKD,QAAL,CAAc,KAAKC,WAAnB,CAAP;IACD,CAhBO;;IAiBRkB,qBAAqB,GAAG;MACtB,OAAO,KAAKP,gBAAL,CAAsBQ,MAA7B;IACD;;EAnBO,CAZG;EAiCbC,OAAO,EAAE;IACP,MAAMC,gBAAN,GAAyB;MACvB,IAAI;QACF,KAAKtB,QAAL,GAAgB,MAAMH,cAAc,CAAC0B,MAAf,EAAtB;MACF,CAFA,CAEE,OAAOC,KAAP,EAAc;QACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;MACF;IACD,CAPM;;IAQPG,WAAW,GAAG;MACZ,KAAKL,gBAAL;MACA,KAAKrB,WAAL,GAAmB,CAAC,CAApB;IACD;;EAXM,CAjCI;;EA8Cb2B,OAAO,GAAG;IACR,KAAKD,WAAL;EACD;;AAhDY,CAAf","names":["useAppStore","Products","NotFoundSearch","ProductService","components","data","products","activeIndex","searchText","computed","productStrings","map","product","type","name","join","toLowerCase","trim","filteredProducts","filter","contact","index","includes","SearchText","activeContact","filteredProductsCount","length","methods","retrieveContacts","getAll","error","console","log","refreshList","mounted"],"sourceRoot":"","sources":["D:\\CT449\\BaiTapLon\\FrontEnd\\src\\views\\SearchView.vue"],"sourcesContent":["<template>\n  <products v-if=\"filteredProductsCount > 0\" :mountproduct=\"filteredProducts\">\n  </products>\n  <not-found-search v-else> </not-found-search>\n</template>\n\n<script>\n// import { useProductStore } from \"@/stores/products.store\";\nimport { useAppStore } from \"@/stores/app.store\";\nimport Products from \"../components/ProductWape.vue\";\nimport NotFoundSearch from \"@/components/NotFoundSearch.vue\";\nimport ProductService from \"@/services/product.service\";\n\nexport default {\n  components: {\n    Products,\n    NotFoundSearch,\n  },\n  data() {\n    return {\n      products: [],\n      activeIndex: -1,\n      searchText: useAppStore(),\n    };\n  },\n  computed: {\n    productStrings() {\n      return this.products.map((product) => {\n        const { type, name } = product;\n        return [type, name].join(\"\").toLowerCase().trim();\n      });\n    },\n    // Trả về các contact có chứa thông tin cần tìm kiếm.\n    filteredProducts() {\n      return this.products.filter((contact, index) =>\n        this.productStrings[index].includes(this.searchText.SearchText)\n      );\n    },\n    activeContact() {\n      if (this.activeIndex < 0) return null;\n      return this.products[this.activeIndex];\n    },\n    filteredProductsCount() {\n      return this.filteredProducts.length;\n    },\n  },\n  methods: {\n    async retrieveContacts() {\n      try {\n        this.products = await ProductService.getAll();\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    refreshList() {\n      this.retrieveContacts();\n      this.activeIndex = -1;\n    },\n  },\n  mounted() {\n    this.refreshList();\n  },\n};\n</script>\n\n<style>\n.SearchEmpty {\n  display: flex;\n  justify-content: center;\n  margin-bottom: 100px;\n}\n\n.textSearchEmpty {\n  text-align: center;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}