{"ast":null,"code":"import Products from \"../components/ProductWape.vue\";\nimport ContactService from \"@/services/contact.service\";\nexport default {\n  components: {\n    Products\n  },\n\n  data() {\n    return {\n      products: []\n    };\n  },\n\n  computed: {\n    // Chuyển các đối tượng contact thành chuỗi để tiện cho tìm kiếm.\n    contactStrings() {\n      return this.contacts.map(contact => {\n        const {\n          name,\n          email,\n          address,\n          phone\n        } = contact;\n        return [name, email, address, phone].join(\"\");\n      });\n    },\n\n    // Trả về các contact có chứa thông tin cần tìm kiếm.\n    filteredContacts() {\n      // if (!this.searchText)\n      return this.products; // return this.contacts.filter((contact, index) =>\n      //   this.contactStrings[index].includes(this.searchText)\n      // );\n    },\n\n    // activeContact() {\n    //   if (this.activeIndex < 0) return null;\n    //   return this.contacts[this.activeIndex];\n    // },\n    filteredContactsCount() {\n      return this.filteredContacts.length;\n    }\n\n  },\n  methods: {\n    async retrieveContacts() {\n      try {\n        this.products = await ContactService.getAll();\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\n    async test() {\n      // console.log(this.filteredContacts.length);\n      this.products = await ContactService.getAll();\n      console.log(this.filteredContacts.length);\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAaA,OAAOA,QAAP,MAAqB,+BAArB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AAEA,eAAe;EACbC,UAAU,EAAE;IACVF;EADU,CADC;;EAIbG,IAAI,GAAG;IACL,OAAO;MACLC,QAAQ,EAAE;IADL,CAAP;EAGD,CARY;;EASbC,QAAQ,EAAE;IACR;IACAC,cAAc,GAAG;MACf,OAAO,KAAKC,QAAL,CAAcC,GAAd,CAAmBC,OAAD,IAAa;QACpC,MAAM;UAAEC,IAAF;UAAQC,KAAR;UAAeC,OAAf;UAAwBC;QAAxB,IAAkCJ,OAAxC;QACA,OAAO,CAACC,IAAD,EAAOC,KAAP,EAAcC,OAAd,EAAuBC,KAAvB,EAA8BC,IAA9B,CAAmC,EAAnC,CAAP;MACD,CAHM,CAAP;IAID,CAPO;;IAQR;IACAC,gBAAgB,GAAG;MACjB;MACA,OAAO,KAAKX,QAAZ,CAFiB,CAGjB;MACA;MACA;IACD,CAfO;;IAgBR;IACA;IACA;IACA;IACAY,qBAAqB,GAAG;MACtB,OAAO,KAAKD,gBAAL,CAAsBE,MAA7B;IACD;;EAtBO,CATG;EAiCbC,OAAO,EAAE;IACP,MAAMC,gBAAN,GAAyB;MACvB,IAAI;QACF,KAAKf,QAAL,GAAgB,MAAMH,cAAc,CAACmB,MAAf,EAAtB;MACF,CAFA,CAEE,OAAOC,KAAP,EAAc;QACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;MACF;IACD,CAPM;;IAQP,MAAMG,IAAN,GAAa;MACX;MACA,KAAKpB,QAAL,GAAgB,MAAMH,cAAc,CAACmB,MAAf,EAAtB;MACAE,OAAO,CAACC,GAAR,CAAY,KAAKR,gBAAL,CAAsBE,MAAlC;IACD;;EAZM;AAjCI,CAAf","names":["Products","ContactService","components","data","products","computed","contactStrings","contacts","map","contact","name","email","address","phone","join","filteredContacts","filteredContactsCount","length","methods","retrieveContacts","getAll","error","console","log","test"],"sourceRoot":"","sources":["D:\\CT449\\shoponline\\src\\views\\ProductView.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"header_product\">\n      <h2 @click=\"test\">Tất cả sản phẩm</h2>\n      <div class=\"sort\"></div>\n    </div>\n    <div class=\"tab-result\">\n      <products v-if=\"filteredContactsCount > 0\" ? :class=\"du\"> </products>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Products from \"../components/ProductWape.vue\";\nimport ContactService from \"@/services/contact.service\";\n\nexport default {\n  components: {\n    Products,\n  },\n  data() {\n    return {\n      products: [],\n    };\n  },\n  computed: {\n    // Chuyển các đối tượng contact thành chuỗi để tiện cho tìm kiếm.\n    contactStrings() {\n      return this.contacts.map((contact) => {\n        const { name, email, address, phone } = contact;\n        return [name, email, address, phone].join(\"\");\n      });\n    },\n    // Trả về các contact có chứa thông tin cần tìm kiếm.\n    filteredContacts() {\n      // if (!this.searchText)\n      return this.products;\n      // return this.contacts.filter((contact, index) =>\n      //   this.contactStrings[index].includes(this.searchText)\n      // );\n    },\n    // activeContact() {\n    //   if (this.activeIndex < 0) return null;\n    //   return this.contacts[this.activeIndex];\n    // },\n    filteredContactsCount() {\n      return this.filteredContacts.length;\n    },\n  },\n  methods: {\n    async retrieveContacts() {\n      try {\n        this.products = await ContactService.getAll();\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async test() {\n      // console.log(this.filteredContacts.length);\n      this.products = await ContactService.getAll();\n      console.log(this.filteredContacts.length);\n    },\n  },\n};\n</script>\n\n<style></style>\n"]},"metadata":{},"sourceType":"module"}