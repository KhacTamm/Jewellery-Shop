{"ast":null,"code":"import InputSearch from \"./InputSearch.vue\";\nimport Products from \"../components/ProductWape.vue\";\nimport ContactService from \"@/services/contact.service\";\nexport default {\n  components: {\n    InputSearch,\n    Products\n  },\n\n  data() {\n    return {\n      products: [],\n      searchText: \"\",\n      activeIndex: -1\n    };\n  },\n\n  watch: {\n    // Giám sát các thay đổi của biến searchText.\n    // Bỏ chọn phần tử đang được chọn trong danh sách.\n    searchText() {\n      this.activeIndex = -1;\n    }\n\n  },\n  computed: {\n    // Chuyển các đối tượng contact thành chuỗi để tiện cho tìm kiếm.\n    productStrings() {\n      return this.products.map(product => {\n        const {\n          type,\n          name\n        } = product;\n        return [type, name].join(\"\").toLocaleUpperCase();\n      });\n    },\n\n    // Trả về các contact có chứa thông tin cần tìm kiếm.\n    filteredProducts() {\n      if (!this.searchText) return this.products;\n      return this.products.filter((contact, index) => this.productStrings[index].includes(this.searchText).toLowerCase());\n    },\n\n    activeContact() {\n      if (this.activeIndex < 0) return null;\n      return this.products[this.activeIndex];\n    },\n\n    filteredProductsCount() {\n      return this.filteredProducts.length;\n    }\n\n  },\n  methods: {\n    test() {\n      console.log(this.searchText);\n    },\n\n    async retrieveContacts() {\n      try {\n        this.products = await ContactService.getAll();\n        console.log(this.products);\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\n    refreshList() {\n      this.retrieveContacts();\n      this.activeIndex = -1;\n    }\n\n  },\n\n  mounted() {\n    this.refreshList();\n  }\n\n};","map":{"version":3,"mappings":"AAmBA,OAAOA,WAAP,MAAwB,mBAAxB;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AAEA,eAAe;EACbC,UAAU,EAAE;IACVH,WADU;IAEVC;EAFU,CADC;;EAKbG,IAAI,GAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EADL;MAELC,UAAU,EAAE,EAFP;MAGLC,WAAW,EAAE,CAAC;IAHT,CAAP;EAKD,CAXY;;EAYbC,KAAK,EAAE;IACL;IACA;IACAF,UAAU,GAAG;MACX,KAAKC,WAAL,GAAmB,CAAC,CAApB;IACD;;EALI,CAZM;EAmBbE,QAAQ,EAAE;IACR;IACAC,cAAc,GAAG;MACf,OAAO,KAAKL,QAAL,CAAcM,GAAd,CAAmBC,OAAD,IAAa;QACpC,MAAM;UAAEC,IAAF;UAAQC;QAAR,IAAiBF,OAAvB;QACA,OAAO,CAACC,IAAD,EAAOC,IAAP,EAAaC,IAAb,CAAkB,EAAlB,EAAsBC,iBAAtB,EAAP;MACD,CAHM,CAAP;IAID,CAPO;;IAQR;IACAC,gBAAgB,GAAG;MACjB,IAAI,CAAC,KAAKX,UAAV,EAAsB,OAAO,KAAKD,QAAZ;MACtB,OAAO,KAAKA,QAAL,CAAca,MAAd,CAAqB,CAACC,OAAD,EAAUC,KAAV,KAC1B,KAAKV,cAAL,CAAoBU,KAApB,EAA2BC,QAA3B,CAAoC,KAAKf,UAAzC,EAAqDgB,WAArD,EADK,CAAP;IAGD,CAdO;;IAeRC,aAAa,GAAG;MACd,IAAI,KAAKhB,WAAL,GAAmB,CAAvB,EAA0B,OAAO,IAAP;MAC1B,OAAO,KAAKF,QAAL,CAAc,KAAKE,WAAnB,CAAP;IACD,CAlBO;;IAmBRiB,qBAAqB,GAAG;MACtB,OAAO,KAAKP,gBAAL,CAAsBQ,MAA7B;IACD;;EArBO,CAnBG;EA0CbC,OAAO,EAAE;IACPC,IAAI,GAAG;MACLC,OAAO,CAACC,GAAR,CAAY,KAAKvB,UAAjB;IACD,CAHM;;IAIP,MAAMwB,gBAAN,GAAyB;MACvB,IAAI;QACF,KAAKzB,QAAL,GAAgB,MAAMH,cAAc,CAAC6B,MAAf,EAAtB;QACAH,OAAO,CAACC,GAAR,CAAY,KAAKxB,QAAjB;MACF,CAHA,CAGE,OAAO2B,KAAP,EAAc;QACdJ,OAAO,CAACC,GAAR,CAAYG,KAAZ;MACF;IACD,CAXM;;IAYPC,WAAW,GAAG;MACZ,KAAKH,gBAAL;MACA,KAAKvB,WAAL,GAAmB,CAAC,CAApB;IACD;;EAfM,CA1CI;;EA2Db2B,OAAO,GAAG;IACR,KAAKD,WAAL;EACD;;AA7DY,CAAf","names":["InputSearch","Products","ContactService","components","data","products","searchText","activeIndex","watch","computed","productStrings","map","product","type","name","join","toLocaleUpperCase","filteredProducts","filter","contact","index","includes","toLowerCase","activeContact","filteredProductsCount","length","methods","test","console","log","retrieveContacts","getAll","error","refreshList","mounted"],"sourceRoot":"","sources":["D:\\CT449\\shoponline\\src\\components\\AppNavbar.vue"],"sourcesContent":["<template>\n  <nav class=\"navheader\">\n    <div class=\"list\">\n      <router-link to=\"/\" class=\"list-item\">Trang chủ</router-link>\n      <router-link to=\"/about\" class=\"list-item\">Giới thiệu</router-link>\n      <router-link to=\"/product\" class=\"list-item\">Sản phẩm</router-link>\n      <router-link to=\"/cart\" class=\"list-item\"\n        ><i class=\"fa-solid fa-basket-shopping\"></i\n      ></router-link>\n    </div>\n    <div class=\"search\" @change=\"test\">\n      <input-search v-model=\"searchText\"> </input-search>\n    </div>\n  </nav>\n  <products v-if=\"filteredProductsCount > 0\" :mountproduct=\"filteredProducts\">\n  </products>\n</template>\n\n<script>\nimport InputSearch from \"./InputSearch.vue\";\nimport Products from \"../components/ProductWape.vue\";\nimport ContactService from \"@/services/contact.service\";\n\nexport default {\n  components: {\n    InputSearch,\n    Products,\n  },\n  data() {\n    return {\n      products: [],\n      searchText: \"\",\n      activeIndex: -1,\n    };\n  },\n  watch: {\n    // Giám sát các thay đổi của biến searchText.\n    // Bỏ chọn phần tử đang được chọn trong danh sách.\n    searchText() {\n      this.activeIndex = -1;\n    },\n  },\n  computed: {\n    // Chuyển các đối tượng contact thành chuỗi để tiện cho tìm kiếm.\n    productStrings() {\n      return this.products.map((product) => {\n        const { type, name } = product;\n        return [type, name].join(\"\").toLocaleUpperCase();\n      });\n    },\n    // Trả về các contact có chứa thông tin cần tìm kiếm.\n    filteredProducts() {\n      if (!this.searchText) return this.products;\n      return this.products.filter((contact, index) =>\n        this.productStrings[index].includes(this.searchText).toLowerCase()\n      );\n    },\n    activeContact() {\n      if (this.activeIndex < 0) return null;\n      return this.products[this.activeIndex];\n    },\n    filteredProductsCount() {\n      return this.filteredProducts.length;\n    },\n  },\n  methods: {\n    test() {\n      console.log(this.searchText);\n    },\n    async retrieveContacts() {\n      try {\n        this.products = await ContactService.getAll();\n        console.log(this.products);\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    refreshList() {\n      this.retrieveContacts();\n      this.activeIndex = -1;\n    },\n  },\n  mounted() {\n    this.refreshList();\n  },\n};\n</script>\n\n<style scope>\n.navheader {\n  background-color: var(--backg);\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 10px;\n  height: 50px;\n  padding: 0 4px 0 40px;\n}\n.list {\n  width: 55%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.list-item {\n  text-decoration: none;\n  font-weight: 800;\n  font-size: 1.2rem;\n  color: #fff;\n  cursor: pointer;\n}\n\n.list-item:hover {\n  color: var(--hover);\n}\n\n.fa-basket-shopping {\n  font-size: 1.6rem;\n}\n\n.search {\n  position: relative;\n  width: 40%;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}