{"ast":null,"code":"import Products from \"../components/ProductWape.vue\";\nimport ProductService from \"@/services/product.service\";\nimport AdminService from \"@/services/admin.service\";\nexport default {\n  components: {\n    Products\n  },\n\n  data() {\n    return {\n      products: [],\n      typeProducts: []\n    };\n  },\n\n  computed: {\n    productStrings() {\n      return this.products.map(product => {\n        const {\n          type\n        } = product;\n        return [type].join(\"\").trim();\n      });\n    },\n\n    // Trả về các contact có chứa thông tin cần tìm kiếm.\n    // filteredProducts() {\n    //   return this.products.filter((contact, index) =>\n    //     this.productStrings[index].includes(this.searchText.SearchText)\n    //   );\n    // },\n    filteredProducts() {\n      return this.products;\n    },\n\n    filteredProductsCount() {\n      return this.filteredProducts.length;\n    },\n\n    filteredTypeT() {\n      return this.typeProducts;\n    },\n\n    filteredTypePCount() {\n      return this.filteredTypeT.length;\n    }\n\n  },\n  methods: {\n    renderType(data) {\n      console.log(data);\n      return this.products.filter((contact, index) => this.productStrings[index].includes(data));\n    },\n\n    // filteredProducts() {\n    //   return this.products.filter((contact, index) =>\n    //     this.productStrings[index].includes(this.searchText.SearchText)\n    //   );\n    // },\n    async retrieveProducts() {\n      try {\n        this.products = await ProductService.getAll();\n      } catch (error) {\n        console.log(error);\n      }\n    },\n\n    async retrieveTypeP() {\n      try {\n        this.typeProducts = await AdminService.getAllTypeProducts();\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n  },\n\n  mounted() {\n    this.retrieveProducts();\n    this.retrieveTypeP();\n  }\n\n};","map":{"version":3,"mappings":"AAqBA,OAAOA,QAAP,MAAqB,+BAArB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AAEA,eAAe;EACbC,UAAU,EAAE;IACVH;EADU,CADC;;EAIbI,IAAI,GAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EADL;MAELC,YAAY,EAAE;IAFT,CAAP;EAID,CATY;;EAUbC,QAAQ,EAAE;IACRC,cAAc,GAAG;MACf,OAAO,KAAKH,QAAL,CAAcI,GAAd,CAAmBC,OAAD,IAAa;QACpC,MAAM;UAAEC;QAAF,IAAWD,OAAjB;QACA,OAAO,CAACC,IAAD,EAAOC,IAAP,CAAY,EAAZ,EAAgBC,IAAhB,EAAP;MACD,CAHM,CAAP;IAID,CANO;;IAOR;IACA;IACA;IACA;IACA;IACA;IACAC,gBAAgB,GAAG;MACjB,OAAO,KAAKT,QAAZ;IACD,CAfO;;IAgBRU,qBAAqB,GAAG;MACtB,OAAO,KAAKD,gBAAL,CAAsBE,MAA7B;IACD,CAlBO;;IAmBRC,aAAa,GAAG;MACd,OAAO,KAAKX,YAAZ;IACD,CArBO;;IAsBRY,kBAAkB,GAAG;MACnB,OAAO,KAAKD,aAAL,CAAmBD,MAA1B;IACD;;EAxBO,CAVG;EAoCbG,OAAO,EAAE;IACPC,UAAU,CAAChB,IAAD,EAAO;MACfiB,OAAO,CAACC,GAAR,CAAYlB,IAAZ;MACA,OAAO,KAAKC,QAAL,CAAckB,MAAd,CAAqB,CAACC,OAAD,EAAUC,KAAV,KAC1B,KAAKjB,cAAL,CAAoBiB,KAApB,EAA2BC,QAA3B,CAAoCtB,IAApC,CADK,CAAP;IAGD,CANM;;IAOP;IACA;IACA;IACA;IACA;IACA,MAAMuB,gBAAN,GAAyB;MACvB,IAAI;QACF,KAAKtB,QAAL,GAAgB,MAAMJ,cAAc,CAAC2B,MAAf,EAAtB;MACF,CAFA,CAEE,OAAOC,KAAP,EAAc;QACdR,OAAO,CAACC,GAAR,CAAYO,KAAZ;MACF;IACD,CAlBM;;IAmBP,MAAMC,aAAN,GAAsB;MACpB,IAAI;QACF,KAAKxB,YAAL,GAAoB,MAAMJ,YAAY,CAAC6B,kBAAb,EAA1B;MACF,CAFA,CAEE,OAAOF,KAAP,EAAc;QACdR,OAAO,CAACC,GAAR,CAAYO,KAAZ;MACF;IACD;;EAzBM,CApCI;;EA+DbG,OAAO,GAAG;IACR,KAAKL,gBAAL;IACA,KAAKG,aAAL;EACD;;AAlEY,CAAf","names":["Products","ProductService","AdminService","components","data","products","typeProducts","computed","productStrings","map","product","type","join","trim","filteredProducts","filteredProductsCount","length","filteredTypeT","filteredTypePCount","methods","renderType","console","log","filter","contact","index","includes","retrieveProducts","getAll","error","retrieveTypeP","getAllTypeProducts","mounted"],"sourceRoot":"","sources":["D:\\CT449\\BaiTapLon_BanChinhThuc1\\FrontEnd\\src\\views\\ProductView.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"header_product\">\n      <h2>Tất cả sản phẩm</h2>\n    </div>\n    <div class=\"tab-result\">\n      <div v-for=\"(item, index) in typeProducts\" :key=\"index\">\n        <div @click=\"renderType(item.name)\">\n          {{ item.name }}\n        </div>\n      </div>\n      <products\n        v-if=\"filteredProductsCount > 0\"\n        :mountproduct=\"filteredProducts\"\n      >\n      </products>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Products from \"../components/ProductWape.vue\";\nimport ProductService from \"@/services/product.service\";\nimport AdminService from \"@/services/admin.service\";\n\nexport default {\n  components: {\n    Products,\n  },\n  data() {\n    return {\n      products: [],\n      typeProducts: [],\n    };\n  },\n  computed: {\n    productStrings() {\n      return this.products.map((product) => {\n        const { type } = product;\n        return [type].join(\"\").trim();\n      });\n    },\n    // Trả về các contact có chứa thông tin cần tìm kiếm.\n    // filteredProducts() {\n    //   return this.products.filter((contact, index) =>\n    //     this.productStrings[index].includes(this.searchText.SearchText)\n    //   );\n    // },\n    filteredProducts() {\n      return this.products;\n    },\n    filteredProductsCount() {\n      return this.filteredProducts.length;\n    },\n    filteredTypeT() {\n      return this.typeProducts;\n    },\n    filteredTypePCount() {\n      return this.filteredTypeT.length;\n    },\n  },\n  methods: {\n    renderType(data) {\n      console.log(data);\n      return this.products.filter((contact, index) =>\n        this.productStrings[index].includes(data)\n      );\n    },\n    // filteredProducts() {\n    //   return this.products.filter((contact, index) =>\n    //     this.productStrings[index].includes(this.searchText.SearchText)\n    //   );\n    // },\n    async retrieveProducts() {\n      try {\n        this.products = await ProductService.getAll();\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    async retrieveTypeP() {\n      try {\n        this.typeProducts = await AdminService.getAllTypeProducts();\n      } catch (error) {\n        console.log(error);\n      }\n    },\n  },\n  mounted() {\n    this.retrieveProducts();\n    this.retrieveTypeP();\n  },\n};\n</script>\n\n<style cope>\n.tab-result {\n  margin-top: 28px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}